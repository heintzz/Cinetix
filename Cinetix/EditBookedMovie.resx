<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="EditBtn.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>